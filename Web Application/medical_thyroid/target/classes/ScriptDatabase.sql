-- MySQL Script generated by MySQL Workbench
-- 07/25/17 08:23:59
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema medical_thyroid
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `medical_thyroid` ;

-- -----------------------------------------------------
-- Schema medical_thyroid
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `medical_thyroid` DEFAULT CHARACTER SET utf8 ;
USE `medical_thyroid` ;

-- -----------------------------------------------------
-- Table `medical_thyroid`.`persistent_logins`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical_thyroid`.`persistent_logins` (
  `series` VARCHAR(64) NOT NULL,
  `token` VARCHAR(64) NOT NULL,
  `username` VARCHAR(64) NOT NULL,
  `last_used` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`series`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical_thyroid`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical_thyroid`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(100) NOT NULL,
  `identifier` JSON NOT NULL,
  `name` JSON NOT NULL,
  `telecom` JSON NULL,
  `gender` VARCHAR(45) NULL,
  `birthdate` VARCHAR(45) NULL,
  `address` JSON NULL,
  `maritalStatus` JSON NULL,
  `contact` JSON NULL,
  `communication` JSON NULL,
  `managingOrganization` VARCHAR(100) NULL,
  `bloodtype` VARCHAR(45) NULL,
  `practitionerRole` JSON NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical_thyroid`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical_thyroid`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `type_UNIQUE` ON `medical_thyroid`.`role` (`type` ASC);


-- -----------------------------------------------------
-- Table `medical_thyroid`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical_thyroid`.`roles` (
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `role_id`),
  CONSTRAINT `fk_roles_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `medical_thyroid`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_roles_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `medical_thyroid`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_roles_role1_idx` ON `medical_thyroid`.`roles` (`role_id` ASC);


-- -----------------------------------------------------
-- Table `medical_thyroid`.`organization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical_thyroid`.`organization` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical_thyroid`.`exam`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical_thyroid`.`exam` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` JSON NOT NULL,
  `subject` JSON NULL,
  `referenceRange` JSON NULL,
  `interpretation` JSON NULL,
  `valueQuantity` JSON NULL,
  `labComments` VARCHAR(500) NULL,
  `performerComments` VARCHAR(500) NULL,
  `issued` VARCHAR(45) NULL,
  `performer` JSON NULL,
  `done` TINYINT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical_thyroid`.`exams`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical_thyroid`.`exams` (
  `user_id` INT NOT NULL,
  `exam_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `exam_id`),
  CONSTRAINT `fk_exams_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `medical_thyroid`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_exams_exam1`
    FOREIGN KEY (`exam_id`)
    REFERENCES `medical_thyroid`.`exam` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_exams_exam1_idx` ON `medical_thyroid`.`exams` (`exam_id` ASC);


-- -----------------------------------------------------
-- Table `medical_thyroid`.`password_reset_token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical_thyroid`.`password_reset_token` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `token` VARCHAR(100) NOT NULL,
  `date` TIMESTAMP NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_password_reset_token_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `medical_thyroid`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_password_reset_token_user1_idx` ON `medical_thyroid`.`password_reset_token` (`user_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

/* Populate USER_PROFILE Table */
INSERT INTO ROLE(id,type) VALUES (1,'ADMIN');
INSERT INTO ROLE(id,type) VALUES (2,'PERSONAL');
INSERT INTO ROLE(id,type) VALUES (3,'PATIENT');
INSERT INTO ROLE(id,type) VALUES (4,'LAB');